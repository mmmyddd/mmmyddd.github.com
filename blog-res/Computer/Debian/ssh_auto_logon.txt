SSH auto logon without password
#tags ssh, dsa, rsa
<h4>操作</h4>

<p class="first">1. 生成密钥对</p>

<pre class="example">
ssh-keygen -d
</pre>

<p>这里使用<code>-d</code>生成dsa格式的密钥,如果不指定则默认是rsa格式,注意保持passphrase为空,否则登录时候
将会被提示输入passphrase</p>

<pre class="example">
Generating public/private dsa key pair.
Enter file in which to save the key (/home/justin/.ssh/id_dsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/justin/.ssh/id_dsa.
Your public key has been saved in /home/justin/.ssh/id_dsa.pub.
The key fingerprint is:
fa:5f:ff:5a:81:11:b3:fc:e0:c7:02:89:93:38:2b:08 justin@justin-vm
The key's randomart image is:
+--[ DSA 1024]----+
|             o   |
|        . o o +  |
| E     o + o =   |
|  . .   o . o *  |
|   . . .S    + = |
|      ..      o .|
|      .     .   .|
|       .   . . . |
|        ...   oo.|
+-----------------+
</pre>

<p>命令结束后，生成了密钥对id_dsa和id_dsa.pub</p>

<p>2. 将公钥传递给服务器</p>

<pre class="example">
ssh-copy-id -i ~/.ssh/id_dsa.pub justin@&lt;my-server-addr&gt;
</pre>

<p>当然，这里还是需要服务器的登录密码的。该命令将id_dsa.pub的内容添加在服务器<code>
~/.ssh/authorized_keys
</code>文件末尾</p>


<p>3. 尝试登录</p>

<p><code>
ssh -l justin &lt;my-server-addr&gt;
</code></p>



<h4>参考资料</h4>

<p class="first">1. <code>ssh-keygen</code> help:</p>

<pre class="example">
usage: ssh-keygen [options]
Options:
  -a trials   Number of trials for screening DH-GEX moduli.
  -B          Show bubblebabble digest of key file.
  -b bits     Number of bits in the key to create.
  -C comment  Provide new comment.
  -c          Change comment in private and public key files.
  -e          Convert OpenSSH to RFC 4716 key file.
  -F hostname Find hostname in known hosts file.
  -f filename Filename of the key file.
  -G file     Generate candidates for DH-GEX moduli.
  -g          Use generic DNS resource record format.
  -H          Hash names in known_hosts file.
  -i          Convert RFC 4716 to OpenSSH key file.
  -l          Show fingerprint of key file.
  -M memory   Amount of memory (MB) to use for generating DH-GEX moduli.
  -N phrase   Provide new passphrase.
  -P phrase   Provide old passphrase.
  -p          Change passphrase of private key file.
  -q          Quiet.
  -R hostname Remove host from known_hosts file.
  -r hostname Print DNS resource record.
  -S start    Start point (hex) for generating DH-GEX moduli.
  -T file     Screen candidates for DH-GEX moduli.
  -t type     Specify type of key to create.
  -v          Verbose.
  -W gen      Generator to use for generating DH-GEX moduli.
  -y          Read private key file and print public key.
</pre>

<p>2. <code>ssh-copy-id</code> help:</p>

<pre class="example">
ssh-copy-id -h
</pre>

<p>用法则如下</p>

<pre class="example">
Usage: /usr/bin/ssh-copy-id [-i [identity_file]] [user@]machine
</pre>

<p><span class="note">
<strong>注意</strong>: 如果不加-i选项，则自动寻找<code>~/.ssh/id_dsa.pub</code>或者<code>~/.ssh/id_rsa.pub</code>
</span></p>


<p>更详细的资料可参考man手册页</p>

<pre class="example">
SSH-COPY-ID(1)                                                                     SSH-COPY-ID(1)

NAME
       ssh-copy-id - install your public key in a remote machine's authorized_keys

SYNOPSIS
       ssh-copy-id [-i [identity_file]] [user@]machine

DESCRIPTION
       ssh-copy-id  is  a  script  that uses ssh to log into a remote machine (presumably using a
       login password, so password authentication should be  enabled,  unless  you've  done  some
       clever use of multiple identities)

       It  also  changes  the  permissions  of  the remote user's home, ~/.ssh, and ~/.ssh/autho-
       rized_keys to remove group writability (which would otherwise prevent you from logging in,
       if the remote sshd has StrictModes set in its configuration).

       If  the -i option is given then the identity file (defaults to ~/.ssh/id_rsa.pub) is used,
       regardless of whether there are any keys in your ssh-agent.  Otherwise, if this:

             ssh-add -L

       provides any output, it uses that in preference to the identity file.

       If the -i option is used, or the ssh-add produced no output, then it uses the contents  of
       the  identity  file.  Once it has one or more fingerprints (by whatever means) it uses ssh
       to append them to ~/.ssh/authorized_keys on the remote machine  (creating  the  file,  and
       directory, if necessary)

SEE ALSO
       ssh(1), ssh-agent(1), sshd(8)

OpenSSH                                  14 November 1999                          SSH-COPY-ID(1)
</pre>

<hr>

<p><strong><em>参考网页</em></strong></p>

<p class="footnote"><a class="footnum" name="fn.1" href="#fnr.1">1.</a> <a href="http://www.fwolf.com/blog/post/279">Fwolf's Blog</a></p>

<p class="footnote"><a class="footnum" name="fn.2" href="#fnr.2">2.</a> <a href="http://www.ibm.com/developerworks/cn/linux/security/openssh/part2/index.html">IBM Developerworks: SSH密钥管理</a></p>


